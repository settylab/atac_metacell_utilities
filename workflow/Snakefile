config= "config/config.yaml"

output_dir = config["output"]

# ---- Main Rule ---- #
rule all:
    input:
        gene_peak = "gp_corr.pickle"
        peak_tf = "peak_tf.h5ad"
        gene_tf_dir = expand("{dirname}/gene_xtf/", dirname=output_dir)

# ---- ml Rules ---- #
rule ml_conda:
    shell:
        "module load Anaconda3/2020.02"

rule ml_R:
    shell:
        "ml R/4.1.0-foss-2020b"

# ---- Renv Rules ---- 
rule install_renv:
    input:
        script = config["scripts"] + "install_renv.R"    
    shell:
        "Rscript {input.script}

rule renv_init_restore:
    run:
        shell(R -e 'renv::init(bare=TRUE)')
        shell(R -e 'renv::restore()')

# ---- Preparation Rules ---- #
rule resize_peaks:
    input:
        atac = config["atac"]
        script = config["scripts"] + "resize_peaks.py"
    params:
        width = config["width"]
    output:
        expand("{dirname}/peaks.bed", dirname=output_dir)
    shell:
        "python {input.script} {input.atac} --outdir=output_dir --width{=params.width}"
    
rule all_seqs:
    input:
        peaks = expand("{dirname}/peaks.bed", dirname=output_dir)
        script = config["scripts"] + "seq_gl.R"
    params:
        span = config["width"]
        genome = config["genome"]
    output:
        outfile = expand("{dirname}all_seqs.fa", dirname=output_dir)
    shell:
        "Rscript {input.script} {input.peaks} {output.outfile} {params.span} {params.genome}"

rule fimo:
    input:
        meme = config["in_meme"]
        seqs = expand("{dirname}all_seqs.fa", dirname=output_dir)
    output:
        fimo_dir = directory(expand("{dirname}/fimo_result/", dirname=output_dir))
    shell:
        fimo  -oc {output.fimo_dir} {input.meme} {input.seqs}

rule peak_tf:
    input:
        fimo_dir = "results/fimo_result"
        atac = config["atac"]
        peaks = expand("{dirname}/peaks.bed", dirname=output_dir)
        script = config["scripts"] + "peak_tf.py"
    output:
        expand("{dirname}/peak_x_tf.h5ad", dirname=output_dir) 
    shell:
        "python {input.script} {input.atac} --peak_file={input.peaks} --fimo_res={input.fimo_dir} -o=output_dir"

rule gp_corr:
    input:
        atac = config["atac"]
        rna = config["rna"]
        script = config["scripts"] + "gp_corrs.py"
    output:
        gp_dir = directory(expand("{dirname}/gp_corrs/", dirname=output_dir))
    run:
        shell("mkdir -p {output.gp_dir}")
        shell("python {input.script} --atac={input.atac} --rna={input.rna} -o=output.gp_dir") 
        
rule gene_x_tf:
    input:
        atac = config["atac"]
        rna = config["rna"]
        peak_tf = expand("{dirname}/peak_x_tf.h5ad", dirname=output_dir)
        gp_dir = expand("{dirname}/gp_corrs/", dirname=output_dir)
        script = config["scripts"] + "compute_gene_tf.py"
    output:
        directory(expand("{dirname}/gp_corrs/", dirname=output_dir)
    shell:
        "python {input.script}"

# ---- Cleaning Rule ---- #
rule clean:
    shell:
        "rm -rf config['output']/*"
