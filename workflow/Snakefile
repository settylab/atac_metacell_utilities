config= "config/config.yaml"

# ---- Main Rule ---- #
rule all:
    input:
        gene_peak = "gp_corr.pickle"
        peak_tf = "peak_tf.h5ad"
        gene_tf_sum = "gtf_sum.csv"
        gene_tf_fimo = "gtf_fimo.csv"
        gene_tf_wt_avg = "gtf_wt_avg.csv"


# ---- Renv Rules ---- #
rule install_renv:    
    shell:
        Rscript config["scripts"] + "install_renv.R"

rule renv_init_restore:
    shell:
        "R -e 'renv::init()'"
        "R -e 'renv::restore()'"

# ---- Preparation Rules ---- #
rule resize_peaks:
    input:
        atac = config["atac"]
        script = config["scripts"] + "resize_peaks.py"
    params:
        width = config["width"]
    output:
        "results/peaks.bed"
    shell:
        "python {input.script} {input.atac} --outdir=config["output"] --width{=params.width}  -o=config["output"]
    
rule all_seqs:
    input:
        peaks = config["output"] + "peaks.bed"
        script = config["scripts"] + "seq_gl.R"
    params:
        span = config["width"]
        genome = config["genome"]
    output:
        outfile = "all_seqs.fa"
    shell:
        "Rscript {input.script} {input.peaks} {output.outfile} {params.span} {params.genome}"

rule fimo:
    input:
        meme = config["in_meme"]
        seqs = "all_seqs.fa"
    params:
        outputdir = "results/fimo_result"
    output:
        directory("results/fimo_result")
    shell:
        fimo  -oc {params.outputdir} {input.meme} {input.seqs}

rule peak_tf:
    input:
        fimo_dir = "results/fimo_result"
        atac = config["atac"]
        peaks = config["output"] + "peaks.bed"
        script = config["scripts"] + "peak_tf.py"
    output:
        "results/peak_x_tf.h5ad" 
    shell:
        "python {input.script} {input.atac} --peak_file={input.peaks} --fimo_res={input.fimo_dir} -o=config["output"]


# ---- Cleaning Rule ---- #
rule clean:
    shell:
        "rm -rf config["output"]/*"
